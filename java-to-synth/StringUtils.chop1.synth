; org.apache.commons.lang3.StringUtils
; public static String chop(final String str)

; inputs
(declare-var |str.size| Int)
(declare-var |str| (Array Int Int))

; sketch
(synth-fun |hole-char|
  (
    (|i| Int)
    (|str.size| Int)
    (|str| (Array Int Int))
  )
  Int)

(define-fun |return|
  (
    (|i| Int)
    (|str.size| Int)
    (|str| (Array Int Int))
  )
  Int
  (|hole-char| |i| |str.size| |str|))

(synth-fun |hole-size|
  (
    (|str.size| Int)
    (|str| (Array Int Int))
  )
  Int)

(define-fun |return.size|
  (
    (|str.size| Int)
    (|str| (Array Int Int))
  )
  Int
  (|hole-size| |str.size| |str|))

; precondition
(define-fun pre 
  (
    (|str.size| Int)
    (|str| (Array Int Int))
  )
  Bool
  true)

; helper
(define-fun ends_on_crlf
  (
    (|str.size| Int)
    (|str| (Array Int Int))
  )
  (and
    (>= |str.size| 2)
    (= (index |str| (- |str.size| 2)) 13)
    (= (index |str| (- |str.size| 1)) 10)
  )
)

; postcondition when string ends on crlf

(constraint (=>
  (and (pre |str.size| |str|) (ends_on_crlf |str| |str.size|))
  (= (|return.size| |str.size| |str|) (- |str.size| 2))
))

(constraint (=>
  (and (pre |str.size| |str|) (ends_on_crlf |str| |str.size|))
  (forall ((index Int))
    (=>
      (and (>= index 0) (< index (|return.size| |str.size| |str|)))
      (= (|return| index |str.size| |str|) (select |str| index))
    )
  ))
)

; postcondition when string does not end on crlf

(constraint (=>
  (and (pre |str.size| |str|) (not (ends_on_crlf |str| |str.size|)))
  (= (|return.size| |str.size| |str|)
    (ite (>= |str.size| 1) (- |str.size| 1) |str.size|)
  ))
)

(constraint (=>
  (and (pre |str.size| |str|) (not (ends_on_crlf |str| |str.size|)))
  (forall ((index Int)) (= (|return| index |str.size| |str|) (select |str| index)))))

(check-synth)
