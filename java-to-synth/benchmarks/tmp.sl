(set-logic ALL)
(declare-var a (Array Int Int))
(declare-var b (Array Int Int))
(declare-var length Int)
(declare-var r Int)
(declare-var r! Int)
(declare-var i Int)
(declare-var i! Int)
(synth-fun inv-fn((parameter0 (Array Int Int))(parameter1 (Array Int Int))(parameter2 Int)(parameter3 Int)(parameter4 Int))Bool
((B Bool)(I Int))
((B Bool ((and B B) (or B B)(>= I I)(= I I)(< I I)
(= (select parameter0 1) (select parameter1 1))
 (= 1 parameter3)
 (>= (+ (* (- 1) parameter4) parameter2 ) 1)
 (>= (+ (* (- 1) parameter4) parameter3 ) 1)
 (>= parameter2 0)
 (>= parameter2 2)
 (>= parameter4 0)
 (>= parameter4 2)
 (exists ((local_var1 Int)) (not (= (select parameter0 local_var1) (select parameter1 local_var1))))
(exists ((local_var1 Int)) (and(<= I local_var1) (< local_var1 I )(not (= (select parameter0 local_var1) (select parameter1 local_var1))))))
(forall ((fresh_local_var Int)) (=> (and (<= I fresh_local_var)(< fresh_local_var I)) (= (select parameter0 (+ fresh_local_var I )) (select parameter1 1))))
(forall ((fresh_local_var Int)) (=> (and (<= I fresh_local_var)(< fresh_local_var I)) (= (select parameter0 local_var1) (select parameter1 local_var1))))
))

(I Int (0 1 (- 1) (+ I I)
(- I)
parameter2 
parameter3 
parameter4 
))
)) 
(constraint (=> (and (= r 0) (= i 0) )(inv-fn a b length r i )))
(constraint (=> (and (inv-fn a b length r i ) (ite (< i length) (and (ite (= (select a i) (select b i)) (= r! r) (= r! 1)) (= i! (+ i 1 )) ) (and (= r! r) (= i! i) )) )(inv-fn a b length r! i! )))
(constraint (=> (and (inv-fn a b length r i ) (>= i length) )(=> (and (<= 0 length) (= r 1) )(exists ((index Int)) (not (= (select a index) (select b index)))))))
(check-synth)
